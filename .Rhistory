files
files <- list.files(pattern = '*.csv')
files
data <- lapply(files, read.delim, header=TRUE, stringsAsFactors = FALSE, strip.white=TRUE)
totalPayments = 0
for (index in 1:length(data)) {
x <- data.frame(data[index])
temp <- x %>%
select(AMOUNT) %>%
summarize_if(is.numeric, sum, na.rm=True)
print(temp)
totalPayments = totalPayments + temp
}
View(x)
data <- lapply(files, read.delim, header=TRUE, stringsAsFactors = FALSE, strip.white=TRUE, ,sep = ',')
totalPayments = 0
for (index in 1:length(data)) {
x <- data.frame(data[index])
head
temp <- x %>%
select(AMOUNT) %>%
summarize_if(is.numeric, sum, na.rm=True)
print(temp)
totalPayments = totalPayments + temp
}
for (index in 1:length(data)) {
x <- data.frame(data[index])
View(x)
View(x)
temp <- x %>%
select(AMOUNT) %>%
summarize_if(is.numeric, sum, na.rm=True)
print(temp)
totalPayments = totalPayments + temp
}
for (index in 1:length(data)) {
x <- data.frame(data[index])
temp <- x %>%
select(AMOUNT) %>%
summarize_if(is.numeric, sum, na.rm=True)
print(temp)
temp
totalPayments = totalPayments + temp
}
temp <- x %>%
select(AMOUNT) %>%
summarize_if(is.numeric, sum)
temp
totalPayments = totalPayments + temp[,1]
}
totalPayments = totalPayments + temp[,1]
}
for (index in 1:length(data)) {
x <- data.frame(data[index])
temp <- x %>%
select(AMOUNT) %>%
summarize(sum)
temp
totalPayments = totalPayments + temp[1,0]
}
for (index in 1:length(data)) {
x <- data.frame(data[index])
temp <- x %>%
select(AMOUNT) %>%
summarize(sum)
temp
totalPayments = totalPayments + temp[1,0]
}
# for (index in 1:length(data)) {
x <- data.frame(data[1])
temp <- x %>%
select(AMOUNT) %>%
summarize(sum)
temp <- sum(x[AMOUNT])
temp <- sum(x[AMOUNT,])
temp <- sum(x[,AMOUNT])
temp <- sum(x[,"AMOUNT"])
temp <- sum(x$AMOUNT)
# for (index in 1:length(data)) {
x <- data.frame(data[1])
temp <- sum(x$AMOUNT)
View(x)
x <- x %>%
mutate(numAmount = as.numeric(AMOUNT))
temp <- sum(x$AMOUNT)
x <- x %>%
mutate(numAmount = as.numeric(str_replace_all(AMOUNT, ",", ""))
temp <- sum(x$AMOUNT)
x <- x %>%
mutate(numAmount = as.numeric(str_replace_all(AMOUNT, ",", "")))
temp <- sum(x$AMOUNT)
temp <- sum(x$numAmount)
temp
for (index in 1:length(data)) {
x <- data.frame(data[index])
x <- x %>%
mutate(numAmount = as.numeric(str_replace_all(AMOUNT, ",", "")))
temp <- sum(x$numAmount)
totalPayments = totalPayments + temp
}
totalPayments
totalPayments = totalPayments + temp
}
totalPayments
for (index in 1:length(data)) {
x <- data.frame(data[index])
x <- x %>%
mutate(numAmount = as.numeric(str_replace_all(AMOUNT, ",", "")))
temp <- sum(x$numAmount)
print(temp)
totalPayments = totalPayments + temp
}
totalPayments
for (index in 1:length(data)) {
x <- data.frame(data[index])
x <- x %>%
mutate(numAmount = as.numeric(str_replace_all(AMOUNT, ",", "")))
temp <- sum(x$numAmount, na.rm=TRUE)
print(temp)
totalPayments = totalPayments + temp
}
totalPayments
for (index in 1:length(data)) {
x <- data.frame(data[index])
x <- x %>%
mutate(numAmount = as.numeric(str_replace_all(AMOUNT, ",", "")))
temp <- sum(x$numAmount, na.rm=TRUE)
totalPayments <- totalPayments + temp
totalPayments
}
totalPayments
for (index in 1:length(data)) {
x <- data.frame(data[index])
x <- x %>%
mutate(numAmount = as.numeric(str_replace_all(AMOUNT, ",", "")))
temp <- sum(x$numAmount, na.rm=TRUE)
totalPayments <- totalPayments + temp
print(totalPayments)
}
totalPayments
```
# Question 2: Define the COVERAGE.PERIOD for each payment as the difference (in days)
between END.DATE and START.DATE. What is the standard deviation in COVERAGE.PERIOD? Only consider payments with strictly positive amounts.
```{r warning=FALSE, message = FALSE}
for (index in 1:2) {
x <- data.frame(data[index])
x <- x %>%
mutate(numAmount = as.numeric(str_replace_all(AMOUNT, ",", "")))
temp <- sum(x$numAmount, na.rm=TRUE)
print(typeof(temp))
}
totalPayments
totalPayments = temp + totalPayments
}
for (index in 1:2) {
x <- data.frame(data[index])
x <- x %>%
mutate(numAmount = as.numeric(str_replace_all(AMOUNT, ",", "")))
temp <- sum(x$numAmount, na.rm=TRUE)
totalPayments = temp + totalPayments
}
totalPayments
data <- lapply(files, read.delim, header=TRUE, stringsAsFactors = FALSE, strip.white=TRUE, ,sep = ',')
totalPayments = 0.0
for (index in 1:2) {
x <- data.frame(data[index])
x <- x %>%
mutate(numAmount = as.numeric(str_replace_all(AMOUNT, ",", "")))
temp <- sum(x$numAmount, na.rm=TRUE)
totalPayments = temp + totalPayments
}
totalPayments
totalPayments = 0.0
for (index in 1:2) {
x <- data.frame(data[index])
x <- x %>%
mutate(numAmount = as.numeric(str_replace_all(AMOUNT, ",", "")))
temp <- sum(x$numAmount, na.rm=TRUE)
totalPayments = temp + totalPayments
}
totalPayments
data <- lapply(files, read.delim, header=TRUE, stringsAsFactors = FALSE, strip.white=TRUE, ,sep = ',')
totalPayments = 0.0
for (index in 1:length(data)) {
x <- data.frame(data[index])
x <- x %>%
mutate(numAmount = as.numeric(str_replace_all(AMOUNT, ",", "")))
temp <- sum(x$numAmount, na.rm=TRUE)
totalPayments <- totalPayments + temp
print(totalPayments)
}
totalPayments
```
Question 2: Define the COVERAGE.PERIOD for each payment as the difference (in days) between END.DATE and START.DATE. What is the standard deviation in COVERAGE.PERIOD? Only consider payments with strictly positive amounts.
```{r warning=FALSE, message = FALSE}
totalData <- data.frame(data[1])
for (index in 2:length(data)) {
temp <- data.frame(data[index])
totalData <- cbind(totalData,temp)
}
for (index in 2:length(data)) {
temp <- data.frame(data[index])
totalData <- rbind(totalData,temp)
}
for (index in 2:length(data)) {
temp <- data.frame(data[index])
totalData <- bind_rows(totalData,temp)
}
```
Question 2: Define the COVERAGE.PERIOD for each payment as the difference (in days) between END.DATE and START.DATE. What is the standard deviation in COVERAGE.PERIOD? Only consider payments with strictly positive amounts.
```{r warning=FALSE, message = FALSE}
totalData <- data.frame(data[1])
for (index in 2:length(data)) {
temp <- data.frame(data[index])
totalData <- bind_rows(totalData,temp)
}
totalData <- data.frame(data[1])
for (index in 2:length(data)) {
temp <- data.frame(data[index])
totalData <- bind_rows(totalData,temp)
}
totalData <- data.frame(data[1])
for (index in 2:length(data)) {
temp <- data.frame(data[index])
totalData <- bind_rows(totalData,temp)
}
View(totalData)
View(totalData)
totalData %>%
mutate(newStartDate = grepl("^\\d{1,2}\\b/\\d{1,2}\\b/\\d{2,4}\\b", START.DATE),
newEndDate = grepl("^\\d{1,2}\\b/\\d{1,2}\\b/\\d{2,4}\\b", END.DATE))
totalData <- totalData %>%
mutate(date_diff = as.Date(as.character(END.DATE), format="%d/%m/%Y")-as.Date(as.character(START.DATE), format="%d/%m/%Y"))
totalData <- totalData %>%
mutate(date_diff = as.numeric(as.Date(as.character(END.DATE), format="%d/%m/%Y")-as.Date(as.character(START.DATE), format="%d/%m/%Y")))
totalData <- totalData %>%
mutate(date_diff = difftime(as.Date(as.character(END.DATE), format="%d/%m/%Y"), as.Date(as.character(START.DATE), format="%d/%m/%Y")))
totalData <- totalData %>%
mutate(date_diff = difftime(as.Date(as.character(END.DATE), format="%d/%m/%Y"), as.Date(as.character(START.DATE), format="%d/%m/%Y"), units = c("days")))
parse_date_time(x = totalData$START.DATE,
orders = c("m/d/Y", "m/d/y"),
locale = "eng")
fmts <- c("%d/%m/%Y", "%m/%d/%y")
totalData <- totalData %>%
mutate(
newStartdate = as.Date(as.numeric(outer(START.DATE, fmts, as.Date)), "1970-01-01"),
newEnddate = as.Date(as.numeric(outer(END.DATE, fmts, as.Date)), "1970-01-01")
)
fmts <- c("%d/%m/%Y", "%m/%d/%y")
totalData <- totalData %>%
mutate(
newStartdate = as.Date(as.numeric(outer(START.DATE, fmts, as.Date)), "1970-01-01"),
newEnddate = as.Date(as.numeric(outer(END.DATE, fmts, as.Date)), "1970-01-01")
)
fmts <- c("%d/%m/%Y", "%d/%m/%y")
totalData <- totalData %>%
mutate(
newStartdate = as.Date(as.numeric(outer(START.DATE, fmts, as.Date)), "1970-01-01"),
newEnddate = as.Date(as.numeric(outer(END.DATE, fmts, as.Date)), "1970-01-01")
)
fmts <- c("%d/%m/%Y", "%d/%m/%y")
totalData$newStartdate = as.Date(as.numeric(apply(outer(DF$date, fmts, as.Date), 1, na.omit)), "1970-01-01")
totalData$newStartdate = as.Date(as.numeric(apply(outer(totalData$START.DATE, fmts, as.Date), 1, na.omit)), "1970-01-01")
install.packages("lubridate")
---
Question 1: What is the total of all the payments in the dataset?
2009-Q3.cvs
```{r warning=FALSE, message = FALSE}
library(tidyverse)
library(lubridate)
files <- list.files(pattern = '*.csv')
files
files <- list.files(pattern = '*.csv')
files
data <- lapply(files, read.delim, header=TRUE, stringsAsFactors = FALSE, strip.white=TRUE, ,sep = ',')
totalPayments = 0.0
data <- lapply(files, read.delim, header=TRUE, stringsAsFactors = FALSE, strip.white=TRUE, ,sep = ',')
exit
---
Question 1: What is the total of all the payments in the dataset?
2009-Q3.cvs
```{r warning=FALSE, message = FALSE}
library(tidyverse)
library(lubridate)
library(tidyverse)
library(lubridate)
exit
library(tidyverse)
library(lubridate)
files <- list.files(pattern = '*.csv')
files
data <- lapply(files, read.delim, header=TRUE, stringsAsFactors = FALSE, strip.white=TRUE, ,sep = ',')
totalData <- data.frame(data[1])
for (index in 2:length(data)) {
temp <- data.frame(data[index])
totalData <- bind_rows(totalData,temp)
}
View(totalData)
totalData <- totalData %>%
mutate(newStartDate = ifelse(grepl("^\\d{1,2}\\b/\\d{1,2}\\b/\\d{2}\\b", START.DATE), paste(subs(START.DATE, 1, 6), "19", START.DATE, 7), START.DATE),
newEndDate = ifelse(grepl("^\\d{1,2}\\b/\\d{1,2}\\b/\\d{2}\\b", END.DATE), paste(subs(END, 1, 6), "19", END.DATE, 7), END.DATE )
)
totalData <- totalData %>%
mutate(newStartDate = ifelse(grepl("^\\d{1,2}\\b/\\d{1,2}\\b/\\d{2}\\b", START.DATE), paste(substr(START.DATE, 1, 6), "19", START.DATE, 7), START.DATE),
newEndDate = ifelse(grepl("^\\d{1,2}\\b/\\d{1,2}\\b/\\d{2}\\b", END.DATE), paste(substr(END, 1, 6), "19", END.DATE, 7), END.DATE )
)
totalData <- totalData %>%
mutate(newStartDate = ifelse(grepl("^\\d{1,2}\\b/\\d{1,2}\\b/\\d{2}\\b", START.DATE), paste(substr(START.DATE, 1, 6), "19", START.DATE, 7), START.DATE),
newEndDate = ifelse(grepl("^\\d{1,2}\\b/\\d{1,2}\\b/\\d{2}\\b", END.DATE), paste(substr(END.DATE, 1, 6), "19", END.DATE, 7), END.DATE )
)
totalData <- totalData %>%
mutate(newStartDate = ifelse(grepl("^\\d{1,2}\\b/\\d{1,2}\\b/\\d{2}\\b", START.DATE), paste(substr(START.DATE, 1, 6), "19", substr(START.DATE, 7)), START.DATE),
newEndDate = ifelse(grepl("^\\d{1,2}\\b/\\d{1,2}\\b/\\d{2}\\b", END.DATE), paste(substr(END.DATE, 1, 6), "19", substr(START.DATE, 7)), END.DATE )
)
totalData <- totalData %>%
mutate(newStartDate = ifelse(grepl("^\\d{1,2}\\b/\\d{1,2}\\b/\\d{2}\\b", START.DATE), paste(substr(START.DATE, 1, 6), "19", substr(START.DATE, 7)), START.DATE),
newEndDate = ifelse(grepl("^\\d{1,2}\\b/\\d{1,2}\\b/\\d{2}\\b", END.DATE), paste(substr(END.DATE, 1, 6), "19", substr(START.DATE, 7)), END.DATE )
)
exit
ca
asdas
exit
totalData <- totalData %>%
mutate(newStartDate = ifelse(grepl("^\\d{1,2}\\b/\\d{1,2}\\b/\\d{2}\\b", START.DATE), paste(substr(START.DATE, 1, 6), "19", substr(START.DATE, 7,)), START.DATE),
newEndDate = ifelse(grepl("^\\d{1,2}\\b/\\d{1,2}\\b/\\d{2}\\b", END.DATE), paste(substr(END.DATE, 1, 6), "19", substr(START.DATE, 7,)), END.DATE )
)
totalData <- totalData %>%
mutate(newStartDate = ifelse(grepl("^\\d{1,2}\\b/\\d{1,2}\\b/\\d{2}\\b", START.DATE), paste(substr(START.DATE, 1, 6), "19", substr(START.DATE, 7,nchar(START.DATE))), START.DATE),
newEndDate = ifelse(grepl("^\\d{1,2}\\b/\\d{1,2}\\b/\\d{2}\\b", END.DATE), paste(substr(END.DATE, 1, 6), "19", substr(START.DATE, 7,nchar(START.DATE))), END.DATE )
)
totalData <- totalData %>%
mutate(newStartDate = ifelse(grepl("^\\d{1,2}\\b/\\d{1,2}\\b/\\d{2}\\b", START.DATE), paste(substr(START.DATE, 1, 6), "19", substr(START.DATE, 7,nchar(START.DATE))), START.DATE),
newEndDate = ifelse(grepl("^\\d{1,2}\\b/\\d{1,2}\\b/\\d{2}\\b", END.DATE), paste(substr(END.DATE, 1, 6), "19", substr(START.DATE, 7,nchar(END.DATE))), END.DATE )
)
totalData <- totalData %>%
mutate(newStartDate = ifelse(grepl("^\\d{1,2}\\b/\\d{1,2}\\b/\\d{2}\\b", START.DATE), paste(substr(START.DATE, 1, 6), "20", substr(START.DATE, 7,nchar(START.DATE)),""), START.DATE),
newEndDate = ifelse(grepl("^\\d{1,2}\\b/\\d{1,2}\\b/\\d{2}\\b", END.DATE), paste(substr(END.DATE, 1, 6), "20", substr(START.DATE, 7,nchar(END.DATE)),""), END.DATE )
)
totalData <- totalData %>%
mutate(newStartDate = ifelse(grepl("^\\d{1,2}\\b/\\d{1,2}\\b/\\d{2}\\b", START.DATE), paste(substr(START.DATE, 1, 6), "20", substr(START.DATE, 7,nchar(START.DATE)),sep = ""), START.DATE),
newEndDate = ifelse(grepl("^\\d{1,2}\\b/\\d{1,2}\\b/\\d{2}\\b", END.DATE), paste(substr(END.DATE, 1, 6), "20", substr(START.DATE, 7,nchar(END.DATE)),sep = ""), END.DATE )
)
View(totalData)
View(totalData)
totalData <- totalData %>%
mutate(newDate = difftime(as.Date(as.character(newEndDate), format="%Y/%m/%d/"), as.Date(as.character(newStartDate), format="%Y/%m/%d/"), units = c("days")))
totalData <- totalData %>%
mutate(newDate = difftime(as.Date(as.character(newEndDate), format="%d/%m/%Y"), as.Date(as.character(newStartDate), format="%d/%m/%Y"), units = c("days")))
totalData <- totalData %>%
mutate(COVERAGE.PERIOD = difftime(as.Date(as.character(newEndDate), format="%d/%m/%Y"), as.Date(as.character(newStartDate), format="%d/%m/%Y"), units = c("days")))
totalData <- totalData %>%
mutate(COVERAGE.PERIOD = as.Date(as.character(newEndDate), format="%d/%m/%Y")-
as.Date(as.character(newStartDate), format="%d/%m/%Y"))
totalData <- totalData %>%
mutate(COVERAGE.PERIOD = as.Date(as.character(newEndDate), format="%m/%d/%Y")-
as.Date(as.character(newStartDate), format="%m/%d/%Y"))
stdofCoverage <- total %>%
sd(total$COVERAGE.PERIOD, na.rm=T)
stdofCoverage
stdofCoverage <- total %>%
sd(totalData$COVERAGE.PERIOD, na.rm=T)
stdofCoverage <- totalData %>%
sd(totalData$COVERAGE.PERIOD, na.rm=T)
stdofCoverage <-
sd(totalData$COVERAGE.PERIOD, na.rm=T)
stdofCoverage
totalData$NEWCOVERAGE.PERIOD[x<0] <- NA
totalData[NEWCOVERAGE.PERIOD<0] <- NA
stdofCoverage <-
sd(totalData[NEWCOVERAGE.PERIOD>=0], na.rm=TRUE)
stdofCoverage <-
sd(totalData[COVERAGE.PERIOD>=0], na.rm=TRUE)
stdofCoverage <-
sd(totalData[totalData$COVERAGE.PERIOD >=0], na.rm=TRUE)
stdofCoverage <-
sd(totalData[totalData[,COVERAGE.PERIOD] >=0,], na.rm=TRUE)
stdofCoverage <-
sd(totalData[totalData[,"COVERAGE.PERIOD"] >=0,], na.rm=TRUE)
stdofCoverage
stdofCoverage <-
sd(totalData[totalData[,"COVERAGE.PERIOD"] >=0,], na.rm=TRUE)
stdofCoverage
totalData <- totalData %>%
mutate(COVERAGE.PERIOD = as.numerical(as.Date(as.character(newEndDate), format="%m/%d/%Y")-
as.Date(as.character(newStartDate), format="%m/%d/%Y")))
totalData <- totalData %>%
mutate(COVERAGE.PERIOD = as.numeric(as.Date(as.character(newEndDate), format="%m/%d/%Y")-
as.Date(as.character(newStartDate), format="%m/%d/%Y")))
stdofCoverage <-
sd(totalData[totalData[,"COVERAGE.PERIOD"] >=0,], na.rm=TRUE)
totalData <- totalData %>%
mutate(COVERAGE.PERIOD = as.double(as.Date(as.character(newEndDate), format="%m/%d/%Y")-
as.Date(as.character(newStartDate), format="%m/%d/%Y")))
stdofCoverage <-
sd(totalData[totalData[,"COVERAGE.PERIOD"] >=0,], na.rm=TRUE)
stdofCoverage <-
sd(totalData[totalData[,"COVERAGE.PERIOD"] >=0.0,], na.rm=TRUE)
totalData <- totalData %>%
mutate(COVERAGE.PERIOD = as.numeric(as.Date(as.character(newEndDate), format="%m/%d/%Y")-
as.Date(as.character(newStartDate), format="%m/%d/%Y")))
sdfun <- function(x) sd(x[x<0])
stdofCoverage <-
apply(totalData$COVERAGE.PERIOD, 1, sdfun)
totalData <- totalData %>%
mutate(COVERAGE.PERIOD = as.numeric(as.Date(as.character(newEndDate), format="%m/%d/%Y")-
as.Date(as.character(newStartDate), format="%m/%d/%Y")))
sdfun <- function(x) sd(x[x<0])
stdofCoverage <-
apply(totalData$COVERAGE.PERIOD, 1, sdfun)
stdofCoverage <- totalData %>%
filter(COVERAGE.PERIOD > 0)
sd(COVERAGE.PERIOD)
stdofCoverage <- totalData %>%
filter(COVERAGE.PERIOD > 0)
sd(totalData$COVERAGE.PERIOD)
stdofCoverage <- totalData %>%
filter(COVERAGE.PERIOD > 0)
sd(stdofCoverage$COVERAGE.PERIOD, na.rm = TRUE)
ansQuestion3 <- totalDate %>%
filter(AMOUNT > 0) %>%
mutate(match = ifelse(between(as.Date(as.character(newStartDate), format="%m/%d/%Y"), as.Date(as.character("01/01/2010"), format="%m/%d/%Y"), as.Date(as.character("12/31/2016"), format="%m/%d/%Y")), 1, 0)) %>%
group_by(match) %>%
summarize(mean(AMOUNT))
ansQuestion3 <- totalData %>%
filter(AMOUNT > 0) %>%
mutate(match = ifelse(between(as.Date(as.character(newStartDate), format="%m/%d/%Y"), as.Date(as.character("01/01/2010"), format="%m/%d/%Y"), as.Date(as.character("12/31/2016"), format="%m/%d/%Y")), 1, 0)) %>%
group_by(match) %>%
summarize(mean(AMOUNT))
ansQuestion3
ansQuestion3 <- totalData %>%
filter(AMOUNT >= 0) %>%
mutate(match = ifelse(between(as.Date(as.character(newStartDate), format="%m/%d/%Y"), as.Date(as.character("01/01/2010"), format="%m/%d/%Y"), as.Date(as.character("12/31/2016"), format="%m/%d/%Y")), TRUE, FALSE)) %>%
group_by(match) %>%
summarize(mean(AMOUNT))
ansQuestion3 <- totalData %>%
filter(AMOUNT >= 0) %>%
mutate(match = ifelse(between(as.Date(as.character(newStartDate), format="%m/%d/%Y"), as.Date(as.character("01/01/2010"), format="%m/%d/%Y"), as.Date(as.character("12/31/2016"), format="%m/%d/%Y")), TRUE, FALSE)) %>%
group_by(match) %>%
summarize(mean(AMOUNT))
ansQuestion3 <- totalData %>%
filter(AMOUNT >= 0) %>%
mutate(match = ifelse(between(as.Date(as.character(newStartDate), format="%m/%d/%Y"), as.Date(as.character("01/01/2010"), format="%m/%d/%Y"), as.Date(as.character("12/31/2016"), format="%m/%d/%Y")), TRUE, FALSE)) %>%
group_by(match) %>%
summarize(mean(AMOUNT, na.rm = TRUE))
ansQuestion3
ansQuestion3 <- totalData %>%
filter(AMOUNT < 0) %>%
mutate(match = ifelse(between(as.Date(as.character(newStartDate), format="%m/%d/%Y"), as.Date(as.character("01/01/2010"), format="%m/%d/%Y"), as.Date(as.character("12/31/2016"), format="%m/%d/%Y")), TRUE, FALSE)) %>%
group_by(match) %>%
summarize(mean(AMOUNT, na.rm = TRUE))
ansQuestion3
ansQuestion3 <- totalData %>%
filter(AMOUNT >= 0) %>%
mutate(match = ifelse(between(newStartDate, "01/01/2010", "12/31/2016"), TRUE, FALSE)) %>%
group_by(match) %>%
summarize(mean(AMOUNT, na.rm = TRUE))
ansQuestion3 <- totalData %>%
filter(AMOUNT >= 0) %>%
mutate(match = ifelse(between(as.Date(as.character(newStartDate), format="%m/%d/%Y"), as.Date(as.character("01/01/2010"), format="%m/%d/%Y"), as.Date(as.character("12/31/2016"), format="%m/%d/%Y")), TRUE, FALSE)) %>%
group_by(match) %>%
summarize(mean(AMOUNT, na.rm = TRUE))
ansQuestion3 <- totalData %>%
filter(AMOUNT >= 0) %>%
mutate(match = ifelse(between(as.Date(as.character(newStartDate), format="%m/%d/%Y"), as.Date(as.character("01/01/2010"), format="%m/%d/%Y"), as.Date(as.character("12/31/2016"), format="%m/%d/%Y")), 1, 0)) %>%
group_by(match)
ansQuestion3
ansQuestion3 <- totalData %>%
filter(AMOUNT >= 0) %>%
mutate(numAmount = as.numeric(str_replace_all(AMOUNT, ",", "")), match = ifelse(between(as.Date(as.character(newStartDate), format="%m/%d/%Y"), as.Date(as.character("01/01/2010"), format="%m/%d/%Y"), as.Date(as.character("12/31/2016"), format="%m/%d/%Y")), 1, 0)) %>%
group_by(match)
ansQuestion3
ansQuestion3 <- totalData %>%
filter(AMOUNT >= 0) %>%
mutate(numAmount = as.numeric(str_replace_all(AMOUNT, ",", "")), match = ifelse(between(as.Date(as.character(newStartDate), format="%m/%d/%Y"), as.Date(as.character("01/01/2010"), format="%m/%d/%Y"), as.Date(as.character("12/31/2016"), format="%m/%d/%Y")), 1, 0)) %>%
group_by(match) %>%
summarize(mean(AMOUNT, na.rm = TRUE))
ansQuestion3
ansQuestion3 <- totalData %>%
filter(AMOUNT >= 0) %>%
mutate(numAmount = as.numeric(str_replace_all(AMOUNT, ",", "")), match = ifelse(between(as.Date(as.character(newStartDate), format="%m/%d/%Y"), as.Date(as.character("01/01/2010"), format="%m/%d/%Y"), as.Date(as.character("12/31/2016"), format="%m/%d/%Y")), 1, 0)) %>%
group_by(match) %>%
summarize(mean(numAmount, na.rm = TRUE))
ansQuestion3
totalData <- totalData %>%
mutate(newOffice = gsub("\\d{2,4}","", OFFICE))
totalData <- totalData %>%
mutate(newOffice = gsub("\\d{2,4}","", OFFICE))
Answer4 <- totalData %>%
filter(substring(newStartDate,7,10)== "2016") %>%
mutate(numAmount = as.numeric(str_replace_all(AMOUNT, ",", ""))) %>%
group_by(OFFICE) %>%
arrange(numAmount)
Answer$
Answer4
head(topAnswer4)
head(Answer4)
View(Answer4)
View(Answer4)
Answer4 <- totalData %>%
filter(substring(newStartDate,7,10)== "2016") %>%
mutate(numAmount = as.numeric(str_replace_all(AMOUNT, ",", ""))) %>%
group_by(OFFICE) %>%
arrange(desc(numAmount))
head(Answer4)
top_n(Answer4,1)
Answer4 <- totalData %>%
filter(substring(newStartDate,7,10)== "2016") %>%
mutate(numAmount = as.numeric(str_replace_all(AMOUNT, ",", ""))) %>%
group_by(OFFICE) %>%
arrange(desc(numAmount)) %>%
top_n(n = 1)
Answer4
